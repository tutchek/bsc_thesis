language ESSENCE' 1.b.a
find s : matrix indexed by [int(1..10), int(1..5)] of bool
such that
$ there is only one answer to each question and there is not any unanswered question
 forall row : int(1..10). ((sum col : int(1..5). s[row,col]) = 1),
$ Question 1
$ A to D
  forall col : int(1..4). ( (s[1,col] = 1) <=> ( (s[(4-col+1),1] = 1) /\ ( forall row : int(1..(4-col)). (s[row,1] = 0) ) ) ),
$ E
  (s[1,5] = 1) <=> (forall row : int(1..4). (s[row,1] = 0)),

$ Question 2
  forall col : int(1..5). ( (s[2,col] = 1) <=> ( forall col2: int(1..5). (s[3+col-1,col2] = s[3+col,col2]) ) ),
$ Question 3
  forall col : int(1..5). ( (s[3,col] = 1) <=> ( (s[(4+col-1),1] = 1) /\ ( forall row : int (4..2+col). s[row,1] = 0 ) ) ),
$ Question 4
  forall col : int(1..5). ( (s[4,col] = 1) <=> ( (s[col*2,2] = 1) /\ ( forall row : int(1..(col-1)). s[row*2,2] = 0 ) ) ),
$ Question 5
  forall col : int(1..5). ( (s[5,col] = 1) <=> (s[2*col-1,3]=1) ),
$ Question 6
  (s[6,1] = 1) <=> ( ( exists row : int(1..5). s[row,4] = 1 ) /\ ( forall row : int (7..10). s[row,4] = 0 ) ),
  (s[6,2] = 1) <=> ( ( exists row : int(7..10). s[row,4] = 1 ) /\ ( forall row : int (1..5). s[row,4] = 0 ) ),
  (s[6,3] = 1) <=> ( ( exists row : int(7..10). s[row,4] = 1 ) /\ ( exists row : int (1..5). s[row,4] = 1 ) ),
  (s[6,4] = 1) <=> ( forall row : int (1..10). s[row,4] = 0 ),
  (s[6,5] = 1) <=> (s[6,4] = 1),
$ Question 7
  forall col : int(1..5). ( (s[7,col] = 1) <=> ( (s[col+4,5] = 1) /\ ( forall row : int (col+4+1..10). s[row,5] = 0 ) ) ),
$ Question 8
  forall col: int(1..5). ( (s[8,col] = 1) <=> ( ( sum row: int(1..10). (s[row,2] + s[row,3] + s[row,4]) ) = (7-col+1) ) ),
$ Question 9
  forall col: int(1..5). ( (s[9,col] = 1) <=> ( ( sum row: int(1..10). (s[row,1] + s[row,5]) ) = (col-1) ) )
$ Constraints for question 10 are useless